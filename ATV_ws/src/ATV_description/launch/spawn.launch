<?xml version="1.0" encoding="UTF-8"?>
<!--<launch>
    <param name="robot_description" command="cat ´$(find ATV_description)/models/polaris_ranger_xp900_no_roll_cage/model.urdf´" />
    
    <node name="my_ATV_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-urdf -param robot_description -model ATV" />
          
</launch>-->

<!--<launch>
    <param name="robot_description" command="$(find ATV_description)/models/polaris_ranger_xp900_no_roll_cage/model.urdf" />

    <name="spawn_my_ATV" pkg="gazebo" type="spawn_model" args="-urdf -param robot_description -z 0.01 -model ATV_model" respawn="false" output="screen" />
</launch>-->


import os
from ament_index_python.packages import get_package_share_directory
from launch import LaunchDescription
from launch.actions import ExecuteProcess
from launch.substitutions import LaunchConfiguration
def generate_launch_description():
    use_sim_time = LaunchConfiguration('use_sim_time', default='true')
    robot_name = 'rrbot_description'
    world_file_name = 'empty.world'

    world = os.path.join(get_package_share_directory(
        robot_name), 'worlds', world_file_name)

    urdf = os.path.join(get_package_share_directory(
        robot_name), 'urdf', 'my_robot.urdf')

    xml = open(urdf, 'r').read()

    xml = xml.replace('"', '\\"')

    swpan_args = '{name: \"my_robot\", xml: \"' + xml + '\" }'

    return LaunchDescription([
        ExecuteProcess(
            cmd=['gazebo', '--verbose', world,
                 '-s', 'libgazebo_ros_factory.so'],
            output='screen'),

        ExecuteProcess(
            cmd=['ros2', 'param', 'set', '/gazebo',
                 'use_sim_time', use_sim_time],
            output='screen'),

        ExecuteProcess(
            cmd=['ros2', 'service', 'call', '/spawn_entity',
                 'gazebo_msgs/SpawnEntity', swpan_args],
            output='screen'),
    ])